@page "/listView/{listid}"

@using DataLibrary
@using Microsoft.Extensions.Configuration
@using ListsWebApp.Models
@inject IDataAccess _data
@inject IConfiguration _config

<h3>ListView</h3>

@if (listItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul>
        @foreach (var listItem in listItems)
        {
            <li>
                <input type="checkbox" @bind="listItem.IsDone" />
                <input @bind="listItem.Title" />
                <button class="btn btn-danger" @onclick="() => DeleteData(listItem.Id)">X</button>
            </li>
        }
    </ul>
}


<input placeholder="Item name..." @bind="newItem" />
<button class="btn btn-primary" @onclick="SaveData">Add item</button>
<button class="btn btn-warning" @onclick="UpdateData">Save</button>
@code {
    [Parameter]
    public string listid { get; set; }
    private string newItem;
    List<ListItem> listItems;

    protected override async Task OnInitializedAsync()
    {
        string sql = $"select * from listitems where listid = '{listid}'";
        listItems = await _data.LoadData<ListItem, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }

    private async Task UpdateData()
    {
        string sql = "update listitems set title = 'xd' where id = '5'";
        await _data.SaveData(sql, new { Title = newItem, ListId = 1, IsDone = 0 }, _config.GetConnectionString("default"));

        await OnInitializedAsync();
    }

    private async Task SaveData()
    {
        if (!string.IsNullOrWhiteSpace(newItem))
        {
            string sql = "insert into listitems (title, listid, isDone) values (@Title, @ListId, @IsDone);";
            await _data.SaveData(sql, new { Title = newItem, ListId = listid, IsDone = 0 }, _config.GetConnectionString("default"));
            newItem = string.Empty;
            await OnInitializedAsync();
        }
    }

    private async Task DeleteData(int id)
    {
        string sql = $"delete from listitems where id = '{id}'";
        await _data.SaveData(sql, new { Title = newItem, ListId = 1, IsDone = 0 }, _config.GetConnectionString("default"));

        await OnInitializedAsync();
    }
}

