@page "/lists"

@using DataLibrary
@using Microsoft.Extensions.Configuration
@using ListsWebApp.Models
@inject IDataAccess _data
@inject IConfiguration _config
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject Data.LoginState loginState;

@if (loginState.IsLoggedIn)
{
    <h3>Lists</h3>

    @if (lists == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <ul>
            @foreach (var list in lists)
            {
                <li>
                    <button @onclick="() => SelectList(list.Id)">@list.Name</button>
                    <button class="btn btn-danger" @onclick="() => DeleteData(list.Id)">X</button>
                </li>
            }
        </ul>
    }

    <input placeholder="List name..." @bind="newItem" />
    <button class="btn btn-primary" @onclick="AddList">Add list</button>

}
else
{
    <h3>Please log in first</h3>
}


@code {
    private string newItem;
    List<ListWA> lists;

    protected override async Task OnInitializedAsync()
    {
        string sql = $"select * from lists where userid = '{loginState.userId}'";
        lists = await _data.LoadData<ListWA, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }

    private async Task UpdateData()
    {
        string sql = "update listitems set title = 'xd' where id = '5'";
        await _data.SaveData(sql, new { Title = newItem, ListId = 1, IsDone = 0 }, _config.GetConnectionString("default"));

        await OnInitializedAsync();
    }

    private async Task AddList()
    {
        if (!string.IsNullOrWhiteSpace(newItem))
        {
            string sql = "insert into lists (userid, name) values (@UserId, @Name);";
            await _data.SaveData(sql, new { UserId = loginState.userId, Name = newItem }, _config.GetConnectionString("default"));
            newItem = string.Empty;
            await OnInitializedAsync();
        }
    }

    private async Task DeleteData(int id)
    {
        string sql = $"delete from listitems where listid = '{id}'";
        await _data.SaveData(sql, new { Title = newItem, ListId = 1, IsDone = 0 }, _config.GetConnectionString("default"));
        sql = $"delete from lists where id = '{id}'";
        await _data.SaveData(sql, new { Title = newItem, ListId = 1, IsDone = 0 }, _config.GetConnectionString("default"));


        await OnInitializedAsync();
    }

    private void SelectList(int id)
    {
        navigationManager.NavigateTo($"/listView/{id}");
    }
}
